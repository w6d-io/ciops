---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (unknown)
  creationTimestamp: null
  name: pipelinesources.ci.w6d.io
spec:
  group: ci.w6d.io
  names:
    kind: PipelineSource
    listKind: PipelineSourceList
    plural: pipelinesources
    shortNames:
    - ps
    singular: pipelinesource
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.state
      name: State
      type: string
    - jsonPath: .status.pipelineName
      name: Pipeline
      priority: 1
      type: string
    - description: CreationTimestamp is a timestamp representing the server time when
        this object was created. It is not guaranteed to be set in happens-before
        order across separate operations. Clients may not set this value. It is represented
        in RFC3339 form and is in UTC.
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PipelineSource is the Schema for the pipelinesources API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Pipeline defines the desired state of Pipeline
            properties:
              artifacts:
                type: boolean
              commit:
                properties:
                  id:
                    type: string
                  message:
                    type: string
                  ref:
                    type: string
                required:
                - id
                - message
                - ref
                type: object
              complete:
                type: boolean
              endTime:
                format: int64
                type: integer
              eventId:
                type: string
              force:
                type: boolean
              id:
                type: string
              logUri:
                type: string
              name:
                type: string
              pipelineIdNumber:
                type: string
              projectId:
                format: int64
                type: integer
              stages:
                items:
                  properties:
                    endTime:
                      format: int64
                      type: integer
                    id:
                      type: string
                    name:
                      type: string
                    startTime:
                      format: int64
                      type: integer
                    status:
                      type: string
                    tasks:
                      items:
                        properties:
                          actions:
                            items:
                              properties:
                                componentId:
                                  type: string
                                data:
                                  additionalProperties:
                                    type: string
                                  type: object
                                endTime:
                                  format: int64
                                  type: integer
                                environments:
                                  additionalProperties:
                                    type: string
                                  type: object
                                id:
                                  type: string
                                name:
                                  type: string
                                params:
                                  additionalProperties:
                                    type: string
                                  type: object
                                ref:
                                  type: string
                                startTime:
                                  format: int64
                                  type: integer
                                status:
                                  type: string
                              required:
                              - componentId
                              - data
                              - endTime
                              - environments
                              - id
                              - name
                              - params
                              - ref
                              - startTime
                              - status
                              type: object
                            type: array
                          conditions:
                            items:
                              items:
                                properties:
                                  id:
                                    type: string
                                  ref:
                                    type: string
                                  type:
                                    type: string
                                  when:
                                    type: string
                                required:
                                - id
                                - ref
                                - type
                                - when
                                type: object
                              type: array
                            type: array
                          endTime:
                            format: int64
                            type: integer
                          id:
                            type: string
                          name:
                            type: string
                          skipOnFailure:
                            type: boolean
                          startTime:
                            format: int64
                            type: integer
                          status:
                            type: string
                        required:
                        - actions
                        - conditions
                        - endTime
                        - id
                        - name
                        - skipOnFailure
                        - startTime
                        - status
                        type: object
                      type: array
                  required:
                  - endTime
                  - id
                  - name
                  - startTime
                  - status
                  - tasks
                  type: object
                type: array
              startTime:
                format: int64
                type: integer
              status:
                type: string
              triggerId:
                type: string
              triggers:
                items:
                  properties:
                    componentId:
                      type: string
                    data:
                      additionalProperties:
                        type: string
                      type: object
                    id:
                      type: string
                    ref:
                      type: string
                    type:
                      type: string
                  required:
                  - componentId
                  - data
                  - id
                  - ref
                  - type
                  type: object
                type: array
              type:
                type: string
            required:
            - artifacts
            - commit
            - complete
            - endTime
            - eventId
            - force
            - id
            - logUri
            - name
            - pipelineIdNumber
            - projectId
            - stages
            - startTime
            - status
            - triggers
            - type
            type: object
          status:
            description: PipelineSourceStatus defines the observed state of PipelineSource
            properties:
              conditionTasks:
                description: ConditionTasks contains the list of conditions task created
                items:
                  type: string
                type: array
              conditions:
                description: Conditions represents the latest available observations
                  of PipelineSource
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              message:
                description: Message contains the pipeline message
                type: string
              pipelineName:
                description: PipelineName contains the name of pipeline resource created
                type: string
              state:
                description: State contains the current state of this Play resource.
                  States Running, Failed, Succeeded, Errored
                type: string
              tasks:
                description: Tasks contains the list of task created
                items:
                  type: string
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
